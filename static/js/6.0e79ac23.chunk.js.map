{"version":3,"sources":["components/Clock.js","components/DigitalTimer.js","lib/useInterval.js","pages/Main.js"],"names":["useStyles","makeStyles","theme","root","width","height","paddingTop","spacing","paddingRight","breakpoints","down","marginBottom","face","backgroundColor","borderRadius","border","palette","grey","position","top","left","boxShadow","shadows","hands","opacity","iFace","s","transformOrigin","zIndex","handBaseZ","m","h","pin","primary","main","degMark","degLine","display","longDegLine","digText","textAlign","fontFamily","digTextBg","Clock","props","classes","fNum","n","toString","padStart","useState","setDegS","setDegM","setDegH","digS","setDigS","digM","setDigM","digH","setDigH","ampm","setAmpm","setInterval","now","Date","getHours","getSeconds","getMinutes","faceMarks","i","push","Paper","elevation","className","clsx","style","transform","Typography","variant","map","d","nMg","marginTop","dMg","fBd","marginLeft","marginRight","confB","error","DigitalTimer","setH","setM","setS","int","setInt","percentDone","setPercentDone","endTime","setEndTime","fTT","setFTT","msg","open","snack","setSnack","confOpen","setConfOpen","totalTime","stopTimer","callback","delay","args","savedCallback","useRef","useEffect","current","id","clearInterval","useInterval","timeLeft","seconds","Math","floor","minutes","hours","align","LinearProgress","aria-label","value","ClickAwayListener","onClickAway","alignItems","Tooltip","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","title","color","Button","onClick","startIcon","disabled","FormGroup","sx","ml","FormControlLabel","control","Switch","defaultChecked","label","Snackbar","autoHideDuration","message","clock","minHeight","padding","fab","bottom","right","cardMg","supText","whiteSpace","divider","controls","Main","zero","setSeconds","setMinutes","setHours","returnIfNull","v","sOpen","setSOpen","examDesc","setExamDesc","examName","setExamName","setTimeLeft","duration","setDuration","document","fullscreenElement","isFScn","setIsFScn","soundOn","setSoundOn","_settingsClose","a","includes","Card","CardContent","paddingBottom","Toolbar","disableGutters","fullscreenEnabled","IconButton","exitFullscreen","body","requestFullscreen","trim","Divider","Fab","Dialog","aria-labelledby","DialogTitle","examDescChange","examTitle","examTitleChange","stTime","setStTime","fontURLChange","f","localStorage","fontURL","sf","appearance","setAppearance","JSON","stringify","sa","DialogActions"],"mappings":"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","file":"static/js/6.0e79ac23.chunk.js","sourcesContent":["import clsx from 'clsx';\nimport {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst handBaseZ = 1;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '0',\n        height: '0',\n\n        paddingTop: `min(100%, min(calc(100vh - ${theme.spacing(2)}), calc(100vw - calc(${theme.spacing(2)} + 300px))))`,\n        paddingRight: `min(100%, min(calc(100vh - ${theme.spacing(2)}), calc(100vw - calc(${theme.spacing(2)} + 300px))))`,\n\n        [theme.breakpoints.down(780)]: {\n            paddingTop: `min(100%, calc(100vw - ${theme.spacing(2)}))`,\n            paddingRight: `min(100%, calc(100vw - ${theme.spacing(2)}))`,\n            marginBottom: theme.spacing(1)\n        },\n\n        position: 'relative',\n        margin: 'auto',\n        borderRadius: '100% !important',\n    },\n    face: {\n        backgroundColor: 'transparent',\n        borderRadius: '50%',\n        width: `calc(100% - ${theme.spacing(3)})`,\n        height: `calc(100% - ${theme.spacing(3)})`,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        position: 'absolute',\n        top: theme.spacing(1.5),\n        left: theme.spacing(1.5),\n        boxShadow: theme.shadows[1]\n    },\n    hands: {\n        position: 'absolute',\n        borderRadius: 16,\n        boxShadow: theme.shadows[6],\n        opacity: .9,\n    },\n    iFace: {\n        position: 'absolute',\n        left: '5%',\n        top: '5%',\n        height: '90%',\n        width: '90%',\n        borderRadius: '50%',\n        border: `1px solid ${theme.palette.grey[700]}`,\n    },\n    s: {\n        backgroundColor: '#f44336',\n        transformOrigin: '1px 90%',\n        zIndex: handBaseZ + 3,\n        width: 2,\n        height: '50%',\n        top: '5%',\n        left: '50%',\n    },\n    m: {\n        backgroundColor: '#2196f3',\n        zIndex: handBaseZ + 1,\n        width: 6,\n        height: 'calc(50% - 55px)',\n        top: 55,\n        left: 'calc(50% - 3px)',\n        transformOrigin: '3px 100%',\n    },\n    h: {\n        backgroundColor: '#4caf50',\n        zIndex: handBaseZ,\n        width: 10,\n        height: 'calc(50% - 100px)',\n        top: 100,\n        left: 'calc(50% - 5px)',\n        transformOrigin: '5px 100%',\n    },\n    pin: {\n        backgroundColor: 'white',\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        left: `calc(50% - ${theme.spacing(1.5)})`,\n        top: `calc(50% - ${theme.spacing(1.5)})`,\n        borderRadius: theme.spacing(3),\n        border: `${theme.spacing(.75)} solid ${theme.palette.primary.main}`,\n        position: 'absolute',\n        zIndex: handBaseZ + 2,\n        boxShadow: theme.shadows[8]\n    },\n    degMark: {\n        left: '50%',\n        position: 'absolute',\n        transformOrigin: '1px 100%',\n        height: '50%',\n        zIndex: handBaseZ - 1\n    },\n    degLine: {\n        height: '10%',\n        width: 1,\n        display: 'block',\n        backgroundColor: theme.palette.grey[700],\n    },\n    longDegLine: {\n        height: '20%',\n        backgroundColor: theme.palette.grey[500],\n    },\n    digText: {\n        position: 'absolute',\n        width: '100%',\n        top: `calc(75% - ${theme.spacing(10)})`,\n        textAlign: 'center',\n        fontFamily: 'sevenSeg,Roboto,serif !important',\n    },\n    digTextBg: {\n        opacity: .1\n    }\n}));\n\nexport default function Clock(props) {\n    const classes = useStyles();\n\n    const fNum = (n) => n.toString().padStart(2, '0');\n\n    const doUpdate = () => {\n        const now = new Date();\n        let h = now.getHours();\n        if (h > 12) h -= 12;\n        setDegS((now.getSeconds()) * 6);\n        setDegM(now.getMinutes() * 6 + (now.getSeconds()) / 10);\n        setDegH(h * 30 + now.getMinutes() / 2);\n        setDigS(fNum(now.getSeconds()));\n        setDigM(fNum(now.getMinutes()));\n        setDigH(now.getHours());\n        setAmpm(now.getHours() > 12 ? 'pm' : 'am');\n    }\n\n    const [s, setDegS] = useState(0),\n        [m, setDegM] = useState(0),\n        [h, setDegH] = useState(0),\n        [digS, setDigS] = useState('00'),\n        [digM, setDigM] = useState('00'),\n        [digH, setDigH] = useState(0),\n        [ampm, setAmpm] = useState('am');\n\n    setInterval(doUpdate, 200);\n\n    let faceMarks = [];\n    for (let i = 0; i < 360; i += 6) faceMarks.push(i);\n\n    return (\n        <Paper elevation={12} className={classes.root}>\n            <div className={classes.face}>\n                <div className={classes.iFace} />\n\n                <div className={clsx(classes.hands, classes.s)} style={{transform: `rotate(${s}deg)`}}/>\n                <div className={clsx(classes.hands, classes.m)} style={{transform: `rotate(${m}deg)`}}/>\n                <div className={clsx(classes.hands, classes.h)} style={{transform: `rotate(${h}deg)`}}/>\n\n                <Typography className={clsx(classes.digText, classes.digTextBg)} variant='h2'>\n                    ~~:~~:~~\n                    { props.ampm && <br/> }\n                    { props.ampm ? '~~' : '' }\n                </Typography>\n                <Typography className={classes.digText} variant='h2'>{fNum(digH > 12 && props.ampm ? digH - 12 : digH)}\n                    :{digM}{digS % 2 === 0 ? ':' : ' '}{digS}\n                    { props.ampm && <br/> }\n                    { props.ampm ? ampm : '' }\n                </Typography>\n\n                <div className={classes.pin} />\n\n                {faceMarks.map(d => {\n                    return (<div\n                        className={classes.degMark}\n                        style={{transform: `rotate(${d}deg)`}}\n                        key={d.toString()}\n                    >\n                        <span className={clsx(classes.degLine,\n                            {[classes.longDegLine]: (d % 30 === 0)}\n                        )} />\n                    </div>)\n                })}\n            </div>\n        </Paper>\n    )\n}","import clsx from 'clsx';\nimport { useState } from 'react';\nimport useInterval from '../lib/useInterval';\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport StopRoundedIcon from '@material-ui/icons/StopRounded';\nimport {ClickAwayListener, FormControlLabel, FormGroup, Snackbar, Switch, Tooltip} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    nMg: { marginTop: theme.spacing(1) + '!important' },\n    dMg: { marginTop: theme.spacing(2) + '!important' },\n    fBd: {\n        marginLeft: '-' + theme.spacing(2),\n        marginRight: '-' + theme.spacing(2),\n    },\n    confB: {\n        marginBottom: theme.spacing(.5) + '!important',\n        marginTop: theme.spacing(.5) + '!important',\n        backgroundColor: theme.palette.error.main + '!important'\n    }\n}));\n\nexport default function DigitalTimer(props) {\n    const classes = useStyles();\n\n    const fNum = (n) => n.toString().padStart(2, '0');\n\n    const [h, setH] = useState(props.h),\n        [m, setM] = useState(props.m),\n        [s, setS] = useState(props.s),\n        [int, setInt] = useState(null),\n        [percentDone, setPercentDone] = useState(100),\n        [endTime, setEndTime] = useState(0),\n        [fTT, setFTT] = useState(0), // Decouple from totalTime which might change when timer is running\n        [snack, setSnack] = useState({\n            msg: '',\n            open: false\n        }),\n        [confOpen, setConfOpen] = useState(false);\n\n    let totalTime = props.s * 1000 + props.m * 60000 + props.h * 3600000;\n\n    const stopTimer = () => {\n        setInt(null);\n        setPercentDone(100);\n        setConfOpen(false);\n\n        setSnack({\n            open: true,\n            msg: 'Timer finished!'\n        })\n    }\n\n    useInterval(() => {\n        const timeLeft = endTime - new Date();\n\n        if (timeLeft < 0) {\n            stopTimer();\n            return;\n        }\n\n        let seconds = Math.floor((timeLeft / 1000) % 60),\n            minutes = Math.floor((timeLeft / (1000 * 60)) % 60),\n            hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);\n\n        setH(hours);\n        setM(minutes);\n        setS(seconds);\n\n        setPercentDone(Math.floor(timeLeft / fTT * 100));\n    }, int);\n\n    const startTimer = () => {\n        if (int) {\n            setConfOpen(true);\n            return;\n        } // Show confirmation tooltip\n\n        setH(props.h);\n        setM(props.m);\n        setS(props.s);\n\n        setEndTime(+new Date() + totalTime);\n\n        setFTT(totalTime);\n\n        setInt(200);\n    }\n\n    return (\n        <>\n            <Typography variant='h3' align='center'>\n                {fNum(int ? h : props.h)}h {fNum(int ? m : props.m)}m {fNum(int ? s : props.s)}s\n            </Typography>\n            <LinearProgress variant=\"determinate\"\n                            aria-label='Time remaining till timer ends'\n                            value={percentDone}\n                            className={clsx(classes.fBd, classes.nMg)} />\n\n            <ClickAwayListener onClickAway={() => setConfOpen(false)}>\n                <div style={{ display: 'flex', alignItems: 'center' }} className={classes.dMg}>\n                    <Tooltip\n                        PopperProps={{\n                            disablePortal: true,\n                        }}\n                        onClose={() => setConfOpen(false)}\n                        open={confOpen}\n                        disableFocusListener\n                        disableHoverListener\n                        disableTouchListener\n                        title={\n                            <>\n                                <Typography color=\"inherit\">Are you sure you want to stop the timer?</Typography>\n                                <Button variant='contained' onClick={stopTimer} startIcon={<StopRoundedIcon />}\n                                        className={classes.confB}>Stop timer</Button>\n                                <Button onClick={() => setConfOpen(false)}>Close</Button>\n                            </>\n                        }>\n                        <Button variant='contained' disabled={confOpen || totalTime <= 0}\n                                startIcon={int ? <StopRoundedIcon /> : <PlayArrowRoundedIcon />}\n                                onClick={startTimer}>{int ? 'Stop' : 'Start'}</Button>\n                    </Tooltip>\n\n                    <Tooltip title='Auto-starts the timer when the start time specified in Settings is reached'>\n                        <FormGroup sx={{ml: 2}}>\n                            <FormControlLabel control={<Switch defaultChecked />} label=\"Auto-start\" />\n                        </FormGroup>\n                    </Tooltip>\n                </div>\n            </ClickAwayListener>\n\n            <Snackbar\n                open={snack.open}\n                autoHideDuration={5000}\n                onClose={() => setSnack({\n                    msg: '',\n                    open: false\n                })}\n                message={snack.msg}\n            />\n        </>\n    )\n}","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay, ...args) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current(...args);\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [args, delay]);\n}","import {useState} from \"react\";\nimport Clock from '../components/Clock';\n\n// MUI\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport {IconButton, Toolbar, Tooltip} from \"@material-ui/core\";\n\n// Icons\nimport SettingsIconRound from '@material-ui/icons/Settings';\nimport FullscreenRoundedIcon from '@material-ui/icons/FullscreenRounded';\nimport FullscreenExitRoundedIcon from '@material-ui/icons/FullscreenExitRounded';\nimport VolumeUpRoundedIcon from '@material-ui/icons/VolumeUpRounded';\nimport VolumeOffRoundedIcon from '@material-ui/icons/VolumeOffRounded';\n\n// Components\nimport Settings from \"../components/Settings\";\nimport DigitalTimer from \"../components/DigitalTimer\";\n\nconst useStyles = makeStyles((theme) => ({\n    clock: {\n        minHeight: '100vh',\n        padding: theme.spacing(1),\n\n        display: 'grid',\n        [theme.breakpoints.down(780)]: {\n            display: 'block',\n        },\n\n        gridTemplateColumns: 'auto 300px',\n        gridTemplateRows: 'auto',\n        gridGap: theme.spacing(1),\n    },\n    fab: {\n        position: 'fixed !important',\n        bottom: theme.spacing(1.5),\n        right: theme.spacing(1.5),\n    },\n    cardMg: {\n        marginTop: 0,\n        marginBottom: theme.spacing(1),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: 300,\n    },\n    supText: { whiteSpace: 'break-spaces', textAlign: 'center' },\n    divider: { marginBottom: theme.spacing(1) + ' !important' },\n    controls: {\n        display: 'flex'\n    },\n}));\n\n\nexport default function Main(props) {\n    const classes = useStyles();\n    const zero = new Date()\n    zero.setSeconds(0);\n    zero.setMinutes(0);\n    zero.setHours(0);\n\n    const returnIfNull = (v, d) => !v || v === 'null' ? d : v\n\n    const [sOpen, setSOpen] = useState(false),\n        [examDesc, setExamDesc] = useState(''),\n        [examName, setExamName] = useState(''),\n        [timeLeft, setTimeLeft] = useState(new Date()),\n        [duration, setDuration] = useState(zero),\n        [isFScn,   setIsFScn]   = useState(!!!document.fullscreenElement),\n        [soundOn, setSoundOn] = useState(true);\n\n    const _settingsClose = () => setSOpen(false);\n    const _settingsOpen  = () => setSOpen(true);\n    const _changeAppear  = (a) => {\n        localStorage.appearance = JSON.stringify(a);\n        props.sa(a);\n    }\n    const _changeFontURL = (f) => {\n        localStorage.fontURL = f;\n        props.sf(f)\n    }\n\n\n    return (\n        <>\n            <div className={classes.clock}>\n                <Clock ampm={props.a.includes('12hr')} />\n\n                <div>\n                    <Card elevation={24} className={classes.cardMg}>\n                        <CardContent style={{paddingBottom: 8}}>\n                            <Typography variant='overline'>Controls</Typography>\n\n                            <Toolbar disableGutters={true}>\n                                <Tooltip title={document.fullscreenEnabled ? 'Fullscreen' : 'Fullscreen mode is not supported'}>\n                                    <span>\n                                        <IconButton aria-label='Enter/exit fullscreen'\n                                            onClick={() =>\n                                        {\n                                            if (document.fullscreenElement) document.exitFullscreen();\n                                            else document.body.requestFullscreen();\n                                            setIsFScn(!!!document.fullscreenElement)\n                                        }}\n                                                    disabled={!document.fullscreenEnabled}>\n                                            {isFScn ? <FullscreenExitRoundedIcon /> : <FullscreenRoundedIcon />}\n                                        </IconButton>\n                                    </span>\n                                </Tooltip>\n                                <Tooltip title={(soundOn ? 'M' : 'Unm') + 'ute sound effects'}>\n                                    <span>\n                                        <IconButton aria-label='Enable/disable sound effects'\n                                            onClick={() => setSoundOn(!soundOn)}>\n                                            {soundOn ? <VolumeUpRoundedIcon /> : <VolumeOffRoundedIcon />}\n                                        </IconButton>\n                                    </span>\n                                </Tooltip>\n                            </Toolbar>\n                        </CardContent>\n                    </Card>\n\n                    {(examName.trim() !== '' && examDesc.trim() !== '') &&\n                    <Card elevation={24} className={classes.cardMg}>\n                        <CardContent>\n                            <Typography variant='overline'>Exam Information</Typography>\n                            <Typography variant='h2' className={classes.supText}>{examName.trim()}</Typography>\n                            <Divider className={classes.divider} />\n                            <Typography variant='h4' className={classes.supText}>{examDesc.trim()}</Typography>\n                        </CardContent>\n                    </Card>\n                    }\n\n                    <Card elevation={24} className={classes.cardMg}>\n                        <CardContent style={{paddingBottom: 16}}>\n                            <Typography variant='overline'>Duration</Typography>\n                            <Typography variant='h4' className={classes.supText}>1000 - 2000hrs</Typography>\n                            <Typography variant='h5' className={classes.supText}>100 hours</Typography>\n                        </CardContent>\n                    </Card>\n\n                    <Card elevation={24} className={classes.cardMg}>\n                        <CardContent style={{paddingBottom: 16}}>\n                            <Typography variant='overline'>Timer</Typography>\n                            <DigitalTimer h={returnIfNull(duration, zero).getHours()}\n                                          m={returnIfNull(duration, zero).getMinutes()}\n                                          s={returnIfNull(duration, zero).getSeconds()}/>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={_settingsOpen}>\n                <SettingsIconRound />\n            </Fab>\n            <Dialog onClose={_settingsClose} aria-labelledby=\"simple-dialog-title\" open={sOpen}>\n                <DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\n                <Settings examDesc={examDesc} examDescChange={setExamDesc}\n                          examTitle={examName} examTitleChange={setExamName}\n                          stTime={timeLeft} setStTime={setTimeLeft}\n                          duration={duration} setDuration={setDuration}\n                          fontURLChange={_changeFontURL}\n                          appearance={props.a} setAppearance={_changeAppear} />\n                <DialogActions>\n                    <Button onClick={_settingsClose}>Done</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}"],"sourceRoot":""}