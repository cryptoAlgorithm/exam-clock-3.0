{"version":3,"sources":["../node_modules/@material-ui/core/Card/cardClasses.js","../node_modules/@material-ui/core/Card/Card.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","../node_modules/@material-ui/core/CardMedia/cardMediaClasses.js","../node_modules/@material-ui/core/CardMedia/CardMedia.js","../node_modules/@material-ui/core/CardActionArea/cardActionAreaClasses.js","../node_modules/@material-ui/core/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/CardActions/cardActionsClasses.js","../node_modules/@material-ui/core/CardActions/CardActions.js","img/oops.webp","img/oopsBg.webp","pages/NotFound.js"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","experimentalStyled","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","styleProps","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","CardContent","component","as","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","children","image","src","style","indexOf","composedStyle","backgroundImage","slots","getCardActionAreaUtilityClass","cardActionAreaClasses","CardActionAreaRoot","ButtonBase","theme","textAlign","focusHighlight","opacity","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","CardActionArea","focusVisibleClassName","_jsxs","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","alignItems","marginLeft","CardActions","useStyles","makeStyles","background","container","justifyContent","minHeight","backdropFilter","NotFound","sx","maxWidth","margin","href","aspectRatio","oops","title","Typography","gutterBottom","variant","color","Button","size"],"mappings":"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","file":"static/js/5.913c42ca.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = experimentalStyled(Paper, {}, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  /* Styles applied to the root element. */\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"raised\"]);\n\n  const styleProps = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    styleProps: styleProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('Material-UI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  /* Styles applied to the root element. */\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\"]);\n\n  const styleProps = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = styleProps;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = styleProps;\n    return _extends({}, styles.root, isMediaComponent && styles.media, isImageComponent && styles.img);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, styleProps.isMediaComponent && {\n  width: '100%'\n}, styleProps.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const styleProps = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    style: composedStyle,\n    styleProps: styleProps,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  /* Styles applied to the root element. */\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = experimentalStyled('span', {}, {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"focusVisibleClassName\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      styleProps: styleProps\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActionArea;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, !styleProps.disableSpacing && styles.spacing);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableSpacing\", \"className\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","export default __webpack_public_path__ + \"static/media/oops.1103803d.webp\";","export default __webpack_public_path__ + \"static/media/oopsBg.8849f7ea.webp\";","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, CardActionArea, CardActions } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport oops from '../img/oops.webp';\nimport background from '../img/oopsBg.webp';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundImage: `url(${background})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n    },\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n        backdropFilter: 'blur(8px)',\n    }\n}));\n\nexport default function NotFound() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <Card sx={{ maxWidth: 500, margin: '1rem' }} elevation={12}>\n                    <CardActionArea href='/'>\n                        <CardMedia\n                            sx={{ aspectRatio: '16/9' }}\n                            image={oops}\n                            title=\"Long road\"\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                You seem lost\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                Oops... You seem to have fallen off the sides of the flat World Wide Web!\n                                Click me to go back home!\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                        <Button size=\"small\" href='/'>Home</Button>\n                        <Button size=\"small\" href='/about'>About</Button>\n                        <Button size=\"small\" href='/credits'>Credits</Button>\n                    </CardActions>\n                </Card>\n            </div>\n        </div>\n\n    )\n}"],"sourceRoot":""}